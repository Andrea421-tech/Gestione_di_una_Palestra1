package view;

import interfaces.ICard;
import interfaces.IMainForm;
import java.util.ArrayList;
import presenter.VisualizzaIscrittiPresenter;
import javax.swing.JOptionPane;
import model.Iscritto;
import presenter.AggiungiIscrittoPresenter;
import view.HomeView;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Cal√¨
 */
public class VisualizzaIscrittiView extends javax.swing.JPanel implements ICard{
    private HomeView mainForm;
    private VisualizzaIscrittiPresenter presenter;
 
    public VisualizzaIscrittiView( IMainForm mainForm) {
          this.mainForm = (HomeView) (IMainForm) mainForm;
         initComponents();
         presenter = new VisualizzaIscrittiPresenter(this);
    }
   
  
    @Override
    public IMainForm getMainForm() {
        return mainForm;
    }

    @Override
    public void setMainForm(IMainForm mainForm) {
        this.mainForm = (HomeView) (IMainForm) mainForm;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText(" Lista Iscritti  ");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Aggiorna Lista");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(68, 68, 68))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(72, 72, 72))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        presenter.caricaIscritti();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        getMainForm().show(HomeView.HOME);
    }//GEN-LAST:event_jButton2ActionPerformed
    
     public void updateListaIscritti(String lista) {
        jTextArea1.setText(lista);
    }
      public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    
    public void showIscritto(String message) {
        JOptionPane.showMessageDialog(this, message, "Risultato Ricerca", JOptionPane.INFORMATION_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setResult(boolean status, String msg) {
        if (!status) {
            showMessage("Errore: " + msg);
        } else {
            showMessage("Operazione completata: " + msg);
        }
    }

    public void displayIscritti(ArrayList<Iscritto> iscritti) {
        if (iscritti == null || iscritti.isEmpty()) {
            showMessage("Nessun iscritto trovato.");
        } else {
            StringBuilder sb = new StringBuilder();
            for (Iscritto iscritto : iscritti) {
                sb.append("Codice: ").append(iscritto.getCodice()).append(", ")
                  .append("Nome: ").append(iscritto.getNome()).append(", ")
                  .append("Cognome: ").append(iscritto.getCognome()).append("\n");
            }
            updateListaIscritti(sb.toString());
        }
    }
}
